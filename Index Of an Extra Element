//Given two sorted arrays of distinct elements.
//There is only 1 difference between the arrays.
//First array has one element extra added in between.
//Find the index of the extra element.
// time complexity O(logN)
//in the while loop try to check if a[i]!=b[j]
//if true then return i;
//else i++ ,j++ 
//loop will run untill i<n
int findExtra(int a[], int b[], int n) {
        // add code here.
        int i=0,j=0;
        while(i<n){
            if(a[i] != b[j]) return i;
            else{
                i++;j++;
            }
        }
        return -1;
    
    }
    
    
/// using binary search
   int findExtra(int arr1[],  int arr2[], int n) 
    { 
        // Initialize result 
        int index = n-1;  
      
        // left and right are end  
        // points denoting the current range. 
        int left = 0, right = n - 2; 
        while (left <= right) 
        { 
            int mid = (left + right) / 2; 
      
            // If middle element is same  
            // of both arrays, it means  
            // that extra element is after  
            // mid so we update left to mid+1 
            if (arr2[mid] == arr1[mid]) 
                left = mid + 1; 
      
            // If middle element is different  
            // of the arrays, it means that  
            // the index we are searching for  
            // is either mid, or before mid.  
            // Hence we update right to mid-1. 
            else
            { 
                index = mid; 
                right = mid - 1; 
            } 
        } 
      
        // when right is greater than  
        // left our search is complete. 
        return index; 
    } 
}
